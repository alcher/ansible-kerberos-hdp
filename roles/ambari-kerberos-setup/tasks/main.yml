---
  - name: Add Kerberos service to cluster
    uri: 
      url: http://{{ hostvars[groups['ambari_server'][0]]['ansible_fqdn'] }}:8080/api/v1/clusters/{{ cluster_name }}/services/KERBEROS
      method: POST
      user: admin
      password: admin
      HEADER_X-Requested-By: ambari
      force_basic_auth: yes
      return_content: yes
      body_format: json
      status_code: 201

  - name: Add components to service
    uri: 
      url: http://{{ hostvars[groups['ambari_server'][0]]['ansible_fqdn'] }}:8080/api/v1/clusters/{{ cluster_name }}/services/KERBEROS/components/KERBEROS_CLIENT
      method: POST
      user: admin
      password: admin
      HEADER_X-Requested-By: ambari
      force_basic_auth: yes
      return_content: yes
      body_format: json
      status_code: 201

  - name: Push Kerberos-env
    uri: 
      url: http://{{ hostvars[groups['ambari_server'][0]]['ansible_fqdn'] }}:8080/api/v1/clusters/{{ cluster_name }}
      method: PUT
      user: admin
      password: admin
      HEADER_X-Requested-By: ambari
      body: "{{ lookup('template', '../templates/kerberos_env_ambari_api.json.j2') }}"
      force_basic_auth: yes
      return_content: yes
      body_format: json
      status_code: 200

  - name: Push krb5.conf
    uri: 
      url: http://{{ hostvars[groups['ambari_server'][0]]['ansible_fqdn'] }}:8080/api/v1/clusters/{{ cluster_name }}
      method: PUT
      user: admin
      password: admin
      HEADER_X-Requested-By: ambari
      body: "{{ lookup('file', '../files/kerberos_env_ambari_api.json') }}"
      force_basic_auth: yes
      return_content: yes
      body_format: json
      status_code: 201

  - name: Config Kerberos Client on all hosts
    uri: 
      url: http://{{ hostvars[groups['ambari_server'][0]]['ansible_fqdn'] }}:8080/api/v1/clusters/{{ cluster_name }}hosts?Hosts/host_name={{ item }}
      method: POST
      user: admin
      password: admin
      HEADER_X-Requested-By: ambari
      body: "{\"host_components\" : [{\"HostRoles\" : {\"component_name\":\"KERBEROS_CLIENT\"}}]}"
      force_basic_auth: yes
      return_content: yes
      body_format: json
      status_code: 201
    with_items: groups['all']

  - name: Install Kerberos service
    uri:
      url: http://{{ hostvars[groups['ambari_server'][0]]['ansible_fqdn'] }}:8080/api/v1/clusters/{{ cluster_name }}/services/KERBEROS
      method: PUT
      user: admin
      password: admin
      HEADER_X-Requested-By: ambari
      body: "{\"ServiceInfo\": {\"state\" : \"INSTALLED\"}}"
      force_basic_auth: yes
      return_content: yes
      body_format: json
      status_code: 201

  - name: Check if Kerberos is installed
    uri:
      url: http://{{ hostvars[groups['ambari_server'][0]]['ansible_fqdn'] }}:8080/api/v1/clusters/{{ cluster_name }}/services/KERBEROS?fields=ServiceInfo/state&minimal_response=true
      method: GET
      user: admin
      password: admin
      HEADER_X-Requested-By: ambari
      force_basic_auth: yes
      return_content: yes
      status_code: 200
    register: kerberos_installed 
    until: complete_installation.content.find("INSTALLED") != -1
    retries: 20
    delay: 10

  - name: stop all services
    uri: 
      url: http://{{ hostvars[groups['ambari_server'][0]]['ansible_fqdn'] }}:8080/api/v1/clusters/{{ cluster_name }}/services/
      method: PUT
      user: admin
      password: admin
      HEADER_X-Requested-By: ambari
      body: '{"RequestInfo": {"context" :"Stop all services via REST"}, "Body": {"ServiceInfo": {"state": "INSTALLED"}}}'
      force_basic_auth: yes
      return_content: yes
      body_format: json
      status_code: 202,200

  - name: Enabling kerberos
    uri: 
      url: http://{{ hostvars[groups['ambari_server'][0]]['ansible_fqdn'] }}:8080/api/v1/clusters/{{ cluster_name }}
      method: PUT
      user: admin
      password: admin
      HEADER_X-Requested-By: ambari
      body: '{"session_attributes": { "kerberos_admin": { "principal" : "{{ admin_user }}@{{ REALM }}", "password" : "{{ password }}" }},"Clusters": {"security_type" : "KERBEROS"} }'
      force_basic_auth: yes
      return_content: yes
      body_format: json
      status_code: 202,200

  - name: start all services
    uri: 
      url: http://{{ hostvars[groups['ambari_server'][0]]['ansible_fqdn'] }}:8080/api/v1/clusters/{{ cluster_name }}/services/
      method: PUT
      user: admin
      password: admin
      HEADER_X-Requested-By: ambari
      body: '{"RequestInfo": {"context" :"Start all services via REST"}, "Body": {"ServiceInfo": {"state": "STARTED"}}}'
      force_basic_auth: yes
      return_content: yes
      body_format: json
      status_code: 202,200